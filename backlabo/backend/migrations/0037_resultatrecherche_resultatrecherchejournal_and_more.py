# Generated by Django 5.2.5 on 2025-10-25 16:26

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('backend', '0036_laboratoire_description'),
    ]

    operations = [
        migrations.CreateModel(
            name='ResultatRecherche',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_resultat', models.DateField()),
                ('creer_le', models.DateTimeField(auto_now_add=True)),
                ('mise_a_jour_le', models.DateTimeField(auto_now=True)),
                ('id_recherche', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.recherche')),
            ],
        ),
        migrations.CreateModel(
            name='ResultatRechercheJournal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=255, verbose_name="Titre de l'activité")),
                ('date_activite', models.DateField(verbose_name="Date de l'activité")),
                ('heure_debut', models.TimeField(blank=True, null=True, verbose_name='Heure de début')),
                ('heure_fin', models.TimeField(blank=True, null=True, verbose_name='Heure de fin')),
                ('auteur', models.CharField(max_length=255, verbose_name="Auteur de l'activité")),
                ('details', models.TextField(verbose_name="Détails de l'activité")),
                ('observations', models.TextField(blank=True, null=True, verbose_name='Observations')),
                ('equipement_utilise', models.CharField(blank=True, max_length=255, null=True, verbose_name='Équipement utilisé')),
                ('lieu', models.CharField(blank=True, max_length=255, null=True, verbose_name='Lieu')),
                ('conditions_meteo', models.CharField(blank=True, max_length=255, null=True, verbose_name='Conditions météorologiques')),
                ('creer_le', models.DateTimeField(auto_now_add=True)),
                ('mise_a_jour_le', models.DateTimeField(auto_now=True)),
                ('id_resultat_recherche', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='journal_entries', to='backend.resultatrecherche')),
            ],
            options={
                'verbose_name': 'Entrée de journal de recherche',
                'verbose_name_plural': 'Entrées de journal de recherche',
                'ordering': ['-date_activite', '-heure_debut'],
            },
        ),
        migrations.CreateModel(
            name='ResultatRechercheMateriel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_materiel', models.CharField(choices=[('equipement', 'Équipement'), ('consommable', 'Consommable'), ('reactif', 'Réactif/Produit chimique'), ('logiciel', 'Logiciel'), ('autre', 'Autre')], default='equipement', max_length=20)),
                ('nom', models.CharField(max_length=255, verbose_name='Nom du matériel')),
                ('reference', models.CharField(blank=True, max_length=100, null=True, verbose_name='Référence')),
                ('quantite', models.PositiveIntegerField(default=1, verbose_name='Quantité')),
                ('unite', models.CharField(default='unité', max_length=50, verbose_name='Unité')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('fournisseur', models.CharField(blank=True, max_length=255, null=True, verbose_name='Fournisseur')),
                ('cout_unitaire', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Coût unitaire')),
                ('creer_le', models.DateTimeField(auto_now_add=True)),
                ('mise_a_jour_le', models.DateTimeField(auto_now=True)),
                ('id_resultat_recherche', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='materiel', to='backend.resultatrecherche')),
            ],
            options={
                'verbose_name': 'Matériel de recherche',
                'verbose_name_plural': 'Matériels de recherche',
                'ordering': ['type_materiel', 'nom'],
            },
        ),
        migrations.CreateModel(
            name='ResultatRechercheMethodologie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_methode', models.CharField(choices=[('experimentale', 'Méthode expérimentale'), ('observationnelle', 'Méthode observationnelle'), ('analytique', 'Méthode analytique'), ('simulation', 'Simulation/Modélisation'), ('enquete', 'Enquête/Questionnaire'), ('entretien', 'Entretien'), ('autre', 'Autre')], default='experimentale', max_length=30)),
                ('titre', models.CharField(max_length=255, verbose_name='Titre de la méthode')),
                ('description', models.TextField(verbose_name='Description de la méthode')),
                ('etapes', models.TextField(blank=True, null=True, verbose_name='Étapes détaillées')),
                ('criteres_evaluation', models.TextField(blank=True, null=True, verbose_name="Critères d'évaluation")),
                ('limitations', models.TextField(blank=True, null=True, verbose_name='Limitations')),
                ('ordre', models.PositiveIntegerField(default=1, verbose_name="Ordre d'affichage")),
                ('creer_le', models.DateTimeField(auto_now_add=True)),
                ('mise_a_jour_le', models.DateTimeField(auto_now=True)),
                ('id_resultat_recherche', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='methodologies', to='backend.resultatrecherche')),
            ],
            options={
                'verbose_name': 'Méthodologie de recherche',
                'verbose_name_plural': 'Méthodologies de recherche',
                'ordering': ['ordre', 'type_methode'],
            },
        ),
        migrations.CreateModel(
            name='ResultatRechercheResultat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_resultat', models.CharField(choices=[('synthese', 'Synthèse des résultats'), ('donnee_quantitative', 'Données quantitatives'), ('donnee_qualitative', 'Données qualitatives'), ('visualisation', 'Visualisation/Graphique'), ('conclusion', 'Conclusion'), ('recommandation', 'Recommandation')], default='synthese', max_length=30)),
                ('titre', models.CharField(max_length=255, verbose_name='Titre du résultat')),
                ('description', models.TextField(verbose_name='Description du résultat')),
                ('valeur_numerique', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True, verbose_name='Valeur numérique')),
                ('unite_mesure', models.CharField(blank=True, max_length=50, null=True, verbose_name='Unité de mesure')),
                ('fichier_resultat', models.FileField(blank=True, null=True, upload_to='static/resultatsRecherche/', verbose_name='Fichier de résultat')),
                ('image_resultat', models.ImageField(blank=True, null=True, upload_to='static/resultatsRecherche/images/', verbose_name='Image de résultat')),
                ('ordre', models.PositiveIntegerField(default=1, verbose_name="Ordre d'affichage")),
                ('creer_le', models.DateTimeField(auto_now_add=True)),
                ('mise_a_jour_le', models.DateTimeField(auto_now=True)),
                ('id_resultat_recherche', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resultats', to='backend.resultatrecherche')),
            ],
            options={
                'verbose_name': 'Résultat de recherche',
                'verbose_name_plural': 'Résultats de recherche',
                'ordering': ['ordre', 'type_resultat'],
            },
        ),
    ]
